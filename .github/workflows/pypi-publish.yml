name: Publish to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*

    - name: Ensure PYPI_API_TOKEN is set
      run: |
        [ -n "${{ secrets.PYPI_API_TOKEN }}" ] || { echo "PYPI_API_TOKEN is EMPTY or undefined"; exit 1; }

    - name: Publish to TestPyPI (optional)
      if: github.event.release.prerelease == true
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*
    
    - name: Publish to PyPI
      if: github.event.release.prerelease == false
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m twine upload dist/*
